'''
This program was written by Jonathon Galsurkar and Meredith Lancaster under the supervision of Prof. William Sakas
at Hunter College, Computer Science and the Graduate Center, Linguistics and Computer Science of the City University 
of New York. 

sakas@hunter.cuny.edu

The program implements a learner that learns multiple abstract, human-like languages grounded in Chomsky's principles
and parameters framework. The learning model is one of first language acquisition, i.e., acquisition by a child of approximately
2 years of age. 

The learner and the abstract domain over which it operates is described in detail in:

Sakas, W.G. & Fodor, J.D. (2012) Disambiguating Syntactic Triggers, Language Acquisition (19) pp 83-143.

The paper and domain and other relevant information are downloadable here: 

http://www.colag.cs.hunter.cuny.edu/downloadables.html


8/9/2016: The program is currently being maintained by Meredith Lancaster 

Meredith.Lancaster88@myhunter.cuny.edu

The most recent data generated by the program, as well as the Python source code and some data visualizations 

are currently available on Github in the results folder 
'''

import time
import sys, getopt
from Child import Child
from runSimulation import runSimulation


def main(argv):
    numberOfEchildren = 0
    numberOfSentences = 0
    languageCode = ''
    outputFile = ''

    try:
        opts, args = getopt.getopt(argv,"he:s:l:o:",["eChildren=", "sentences=", "languageCode=", "outFile="])

    except getopt.GetoptError:
        print 'An incorrect number of arguments were entered.'
        sys.exit(2)

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            print 'Enter four command line arguments:'
            print '(1) The number of eChildren to run the simulation on'
            print '(2) The number of sentences for each eChild to process'
            print '(3) The desired language code (French=584, English=611, German=2253, Japanese=3856)'
            print '(4) The name of the output file'
            sys.exit()

        elif opt in ("-e", "--eChildren"):
            try:
                numberOfEchildren = int(arg)
            except ValueError:
                print 'The argument entered is not a valid integer'
                sys.exit(2)

        elif opt in ("-s", "--sentences"):
            try:
                numberOfSentences = int(arg)
            except ValueError:
                print 'The argument entered is not a valid integer'
                sys.exit(2)

        elif opt in ("-l", "--languageCode"):
            languageCode = arg

        elif opt in ("-o", "--outFile"):
            outputFile = arg

    # This will erase the contents of the chosen output file
    # to make room for the new results
    open(outputFile, 'w').close()

    infoFile = open('EngFrJapGerm.txt','rU') # 0001001100011
    runSim1 = runSimulation(infoFile.readlines())
    infoFile.close()

    # Choose sentences corresponding to one of the four
    # available: French=584, English=611, German=2253, Japanese=3856
    runSim1.makeSelectedSentenceList(languageCode)

    # Runs a simulation over numberOfEchildren eChildren
    runSim1.runSimulation(numberOfEchildren, numberOfSentences, outputFile)

if __name__ == '__main__':
    start = time.time() 
    main(sys.argv[1:])
    end = time.time() - start
    print "Time to complete:", end
'''
This program was written by Jonathon Galsurkar and Meredith Lancaster under the supervision of Prof. William Sakas
at Hunter College, Computer Science and the Graduate Center, Linguistics and Computer Science of the City University 
of New York. 

sakas@hunter.cuny.edu

The program implements a learner that learns multiple abstract, human-like languages grounded in Chomsky's principles
and parameters framework. The learning model is one of first language acquisition, i.e., acquisition by a child of approximately
2 years of age. 

The learner and the abstract domain over which it operates is described in detail in:

Sakas, W.G. & Fodor, J.D. (2012) Disambiguating Syntactic Triggers, Language Acquisition (19) pp 83-143.

The paper and domain and other relevant information are downloadable here: 

http://www.colag.cs.hunter.cuny.edu/downloadables.html


8/9/2016: The program is currently being maintained by Meredith Lancaster 

Meredith.Lancaster88@myhunter.cuny.edu

The most recent data generated by the program, as well as the Python source code and some data visualizations 

are available on Github here:

<XXXXXXXX>>
'''

import time
from Child import Child
from runSimulation import runSimulation


def main():
    open('French_results_100000_tcv.csv', 'w').close()
    runSim1 = runSimulation()

    infoFile = open('EngFrJapGerm.txt','rU') # 0001001100011
    runSim1.sentenceInfo = infoFile.readlines()
    infoFile.close()

    #French=584, English=611, German=2253, Japanese=3856
    runSim1.makeSelectedSentenceList('584')
    #print "selected sentences: ", len(runSim1.selectedSentences)

    runSim1.runSimulation(100000)
    print "Finished \n"

    runSim1.printResults(100000)    

if __name__ == '__main__':
    start = time.time() 
    main()
    end = time.time() - start
    print "Time to complete:", end